defineAddress framePtr: $00
defineAddress framePtrHI: $01
defineAddress stackPtr: $02
defineAddress stackPtrHI: $03

LDA #$00
STA stackPtr
STA framePtr
LDA #$40
STA stackPtrHI
STA framePtrHI



//alloc 2 bytes and set to #3 and #4
JSR pushStackFrame
LDA #2
JSR malloc

//variable expression
LDA #4
LDY #2
STA (framePtr),Y

LDA #3
INY
STA (framePtr),Y

//alloc 3 more bytes, and set to #A, #B, #C

JSR pushStackFrame
LDA #3
JSR malloc

//variable expression
LDA #$A
LDY #2
STA (framePtr),Y

LDA #$B
INY
STA (framePtr),Y

LDA #$C
INY
STA (framePtr),Y


JSR popStackFrame

BRK


@pushStackFrame
    // write framePtr to next 2 bytes of stack
    LDY #0
    LDA framePtr
    STA (stackPtr),Y
    INY
    LDA framePtrHI
    STA (stackPtr),Y


    //set frame ptr to stack ptr
    LDA stackPtr
    STA framePtr
    LDA stackPtrHI
    STA framePtrHI

    LDA #2
    JSR malloc
    //save old frameptr

    RTS

@popStackFrame
    // set stackPtr to framePtr
    LDA framePtr
    STA stackPtr
    LDA framePtrHI
    STA stackPtrHI

    // set framePtr to first two bytes of old frame

    LDY #0
    LDA (stackPtr),Y
    STA framePtr
    INY
    LDA (stackPtrHI),Y
    STA framePtrHI

    RTS

@malloc

    CLC
    ADC stackPtr
    STA stackPtr
    LDA #0
    ADC stackPtrHI
    STA stackPtrHI

    RTS